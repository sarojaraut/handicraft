Chapter 5 - Data Guard Protection Modes


Protection mode decision is crucial and database administrators need to work with IT managers and other responsible people to determine RTO (Recovery Time Objective) and RPO (Recovery Point Objective) values and to select the most appropriate mode for their Data Guard configurations.

The following are the different modes:

Maximum Protection
Maximum Performance
Maximum Availability

The Maximum Protection mode
The Maximum Protection mode is referred to as the Guaranteed Zero Data Loss configuration. A primary database operating on the Maximum Protection mode doesn't provide an acknowledgment to the users that the commit is completed until transactions are successfully transferred to at least one standby destination. This setup requires the SYNC redo transport service using the LGWR attribute and guarantees that no data will be lost on the standby database in case of a primary database failure.

Because the primary database will always wait for an acknowledgment from standby destinations to continue its operation, there will be performance implications on the primary database. However, with 11g, the performance effect of using the SYNC redo transport service is less than the earlier releases. In the previous releases, the primary database doesn't send a redo to the standby database before completing the write to online redo logs. In 11g, the database writes redo to online redo logs and sends it to standby destinations simultaneously. This behavior reduces the time waited to complete a commit for a primary database.

Consider the following points before setting the Maximum Protection mode:

 Network bandwidth between sites is essential in this mode. If the bandwidth and latency of a network fails to satisfy real-time transport of redo generated by the primary database, there will be serious performance- and database-availability problems on the primary database.

 Using more than one standby database (preferably a physical standby one) for a Maximum Protection configuration is a good practice, which will increase the uptime of the primary database on standby and network failures.

 The primary database must be on the mount mode when changing the data protection mode from Maximum Performance to Maximum Protection.

 On all standby databases of the Data Guard configuration, the standby redo logs need to be created with the correct number and size before using the Maximum Performance mode.

 It wasn't possible to use a logical standby database with the Maximum Protection mode before 10g, because standby redo logs weren't supported by logical standby databases.

The Maximum Performance mode
This is the mode in which the primary database's availability is completely independent of the redo transport service.
This mode is the default protection mode and the log transport service must use the ASYNC mode with the LGWR or ARCH attribute. However, with 11g, ARCH transport is not recommended because it doesn't offer any advantage in terms of performance, and offers less data protection.
In the normal operation of the Maximum Performance configuration, the redo data, which is on the way from primary to standby, is at risk from primary database failures.

The Maximum Availability mode
The Maximum Availability mode is the data protection mode that has the ability to run as a Maximum Protection or Maximum Performance mode depending on the accessibility of standby databases. If standby is up and able to receive redo data synchronously, the primary database acts like the Maximum Protection mode and waits for acknowledgment from the standby database to complete transactions. If primary database not able to receive acknowledgment from any standby database. It waits for a predefined period of time and if the connection cannot be established, the primary database continues its operation as a Maximum Performance mode database. The number of seconds that the primary waits before marking a standby inaccessible is defined with the NET_TIMEOUT attribute of the LOG_ARCHIVE_DEST_n parameter. The default value of this parameter is 30 seconds. 

When the primary database is not able to connect to the standby database for NET_TIMEOUT seconds, it stops sending connection requests to the standby database and continues completing transactions. Then, the primary retries connecting to the standby immediately after every online log switch. We can use the REOPEN attribute to set the time (in seconds) for which the primary attempts to reconnect to the standby. When the connection is established, the missing archived redo logs will be sent to the standby by the ARCH process simultaneously with the online redo transport.

With its logic, the Maximum Availability mode provides zero data loss in a normal operation, and the primary database's availability is not at risk when there is no accessible standby database.

We can state that in a Maximum Availability mode Data Guard configuration, data is at risk only when two failures occur consecutively on the standby and primary databases.

Changing the protection mode with SQL*Plus
We have a physical standby configuration, which is in the Maximum Performance mode (by default) with ASYNC redo transport, without standby redo logs, and does not use Real-Time Apply. We'll try to convert it to the Maximum Protection mode. 
SQL> SELECT PROTECTION_MODE FROM V$DATABASE;

It's not possible to convert a standby in the Maximum Performance mode to the Maximum Protection and Maximum Availability modes when the primary database is open. We need to put the primary in a mount state in order to make this change. We can use use the following query:

SQL> SHUTDOWN IMMEDIATE
SQL> STARTUP MOUNT
SQL> ALTER DATABASE SET STANDBY DATABASE TO MAXIMIZE PROTECTION;

The LOG_ARCHIVE_DEST_2 parameter, which is used for the physical standby database log transport, is defined with the ASYNC attribute that is used for the Maximum Performance protection mode. In order to convert the database to Maximum Protection or Maximum Availability, we must change the ASYNC attribute to SYNC as follows:

SQL> ALTER SYSTEM SET LOG_ARCHIVE_DEST_2='SERVICE=INDIA LGWR SYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=INDIA_UN';

We should also change the LOG_ARCHIVE_DEST_n parameter, which is "VALID_FOR = PRIMARY_ROLE", in the standby database to the SYNC redo transport mode. If we don't, the protection mode will not operate after a switchover because ASYNC cannot be used with the Maximum Protection mode.

In order to set Maximum Protection or Maximum Availability modes, we must create standby redo logfiles in the standby database. Stop Redo Apply, create standby redo logs and start Redo Apply again as Real-Time Apply on the standby database:

SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;

SQL> alter database add standby logfile group 4 size 52428800;
SQL> alter database add standby logfile group 5 size 52428800;
SQL> alter database add standby logfile group 6 size 52428800;
SQL> alter database add standby logfile group 7 size 52428800;

SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE DISCONNECT FROM SESSION;

Start the primary database and query the data protection mode as follows:
SQL> STARTUP MOUNT
SQL> ALTER DATABASE OPEN;

SQL> SELECT PROTECTION_MODE FROM V$DATABASE;

Now try to shut down the standby database as shown in the following query:
SQL> SHUTDOWN IMMEDIATE
ORA-01154: database busy. Open, close, mount, and dismount not allowed now

As you can see, it's not possible to shut down a standby database in the Maximum Protection mode if it's the only standby database alive.

Now kill the SMON process to simulate a failure on the standby database server as follows:
$ ps -ef |grep smon_INDIA
oracle 7064 1 0 Sep16 ? 00:00:00 ora_smon_INDIA
$ kill -9 7064

Now try modifying the primary database by inserting data into a table as shown in the following query:
SQL> INSERT INTO HR.REGIONS VALUES (102,'TEST');
1 row created.
SQL> COMMIT;
The commit statement will wait and not be executed. At this stage, the primary database will not accept any change because of the Maximum Protection mode's characteristic. Then the instance will be terminated by LGWR as shown in the following alert log lines:

Now let's try to change the data protection mode to Maximum Availability as shown in the following query:
SQL> ALTER DATABASE SET STANDBY DATABASE TO MAXIMIZE AVAILABILITY;

Try to shut down the standby database as shown in the following query:
SQL> SHUTDOWN IMMEDIATE
ORA-01109: database not open
Database dismounted.
ORACLE instance shut down.

Changing the protection mode with Data Guard broker

We now have Maximum Performance as the default protection mode in our configuration. Let's check it through DGMGRL. We can connect the interface from the primary or standby as follows:
$ dgmgrl
DGMGRL> CONNECT /
DGMGRL> SHOW CONFIGURATION;

Check and then change the log transport service attribute via DGMGRL, as shown in the following statements:
DGMGRL> SHOW DATABASE VERBOSE 'TURKEY_UN' LogXptMode;
LogXptMode = 'ASYNC'
DGMGRL> SHOW DATABASE VERBOSE 'INDIA_UN' LogXptMode;
LogXptMode = 'ASYNC'

The log transport service attribute should be changed for both the primary and standby databases as shown in the following command line:
For primary:
DGMGRL> EDIT DATABASE 'TURKEY_UN' SET PROPERTY LOGXPTMODE='SYNC';
Property "logxptmode" updated
DGMGRL> SHOW DATABASE VERBOSE 'TURKEY_UN' LogXptMode;
LogXptMode = 'SYNC'

For standby:
DGMGRL> EDIT DATABASE 'INDIA_UN' SET PROPERTY LOGXPTMODE='SYNC';
Property "logxptmode" updated
DGMGRL> SHOW DATABASE VERBOSE 'INDIA_UN' LogXptMode;
LogXptMode = 'SYNC'

Ensure that the standby redo logs exist and are created with the correct size on the standby database, as shown in the following query:
SQL> select group#,bytes from v$standby_log;

Now change the protection mode to Maximum Availability as shown in the following command line:
DGMGRL> EDIT CONFIGURATION SET PROTECTION MODE AS MaxAvailability;
Succeeded.

