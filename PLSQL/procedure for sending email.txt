CREATE OR REPLACE PROCEDURE GGS.SEND_EMAIL (I_TO_EMAIL IN VARCHAR2,
I_FROM_NAME IN VARCHAR2,
I_FROM_EMAIL IN VARCHAR2,
I_SUBJECT IN VARCHAR2,
I_MESSEGE IN VARCHAR2)
IS
C UTL_SMTP.CONNECTION;
L_EMAIL_START_POS NUMBER (5) := 1;
L_EMAIL_END_POS NUMBER (5) := 0;
L_EMAIL_CNT NUMBER (5) := 0;
L_EMAIL VARCHAR2 (250);
L_LAST_EMAIL_ADDR BOOLEAN := FALSE;
PROCEDURE SEND_HEADER (NAME IN VARCHAR2, HEADER IN VARCHAR2)
AS
BEGIN
UTL_SMTP.WRITE_DATA (C, NAME || ': ' || HEADER || UTL_TCP.CRLF);
END;
BEGIN
C := UTL_SMTP.OPEN_CONNECTION ('your.mail.relay.server');
UTL_SMTP.HELO (C, 'foo.com');
UTL_SMTP.MAIL (C, I_FROM_EMAIL);
LOOP
L_EMAIL_CNT := L_EMAIL_CNT + 1;
L_EMAIL_END_POS := INSTR (STR1 => I_TO_EMAIL,
STR2 => ',',
POS => 1,
NTH => L_EMAIL_CNT);
L_LAST_EMAIL_ADDR := (L_EMAIL_END_POS <= 0);
L_EMAIL_END_POS := CASE
WHEN (L_EMAIL_END_POS <= 0) THEN LENGTH (I_TO_EMAIL) + 1
WHEN (L_EMAIL_START_POS = 0) THEN L_EMAIL_END_POS - 1
ELSE L_EMAIL_END_POS
END;
L_EMAIL :=	SUBSTR (STR1 => I_TO_EMAIL,
POS => L_EMAIL_START_POS,
LEN => (L_EMAIL_END_POS - L_EMAIL_START_POS));
UTL_SMTP.RCPT (C, L_EMAIL);
EXIT WHEN L_LAST_EMAIL_ADDR;
L_EMAIL_START_POS := L_EMAIL_END_POS + 1;
END LOOP;
UTL_SMTP.OPEN_DATA (C);
SEND_HEADER ('From', '"' || I_FROM_NAME || '" <' || I_FROM_EMAIL || '>');
SEND_HEADER ('To', '"Recipient" <' || I_TO_EMAIL || '>');
SEND_HEADER ('Subject', I_SUBJECT);
UTL_SMTP.WRITE_DATA (C, UTL_TCP.CRLF || I_MESSEGE);
UTL_SMTP.CLOSE_DATA (C);
UTL_SMTP.QUIT (C);
EXCEPTION
WHEN UTL_SMTP.TRANSIENT_ERROR OR UTL_SMTP.PERMANENT_ERROR
THEN
BEGIN
UTL_SMTP.QUIT (C);
EXCEPTION
WHEN UTL_SMTP.TRANSIENT_ERROR OR UTL_SMTP.PERMANENT_ERROR
THEN
NULL;
END;
RAISE_APPLICATION_ERROR (
-20000,
'Failed: ' || SQLERRM
);
END SEND_EMAIL;
/